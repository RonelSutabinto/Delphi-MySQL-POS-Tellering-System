unit OtherPayments;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, ExtCtrls, StdCtrls, DB, Mask, DBCtrls, Grids, DBGrids, CRGrid,
  VolDBEdit, QRCtrls, QuickRpt, PDJSillyLabel, DBAccess, MyAccess, MemDS,
  NxCollection;

type
  TOtherPaymentsForm = class(TForm)
    Panel1: TPanel;
    RadioGroup1: TRadioGroup;
    Search: TLabeledEdit;
    Button6: TNxButton;
    OP: TMyTable;
    DSOP: TDataSource;
    OPID: TIntegerField;
    OPCode: TStringField;
    OPDescription: TStringField;
    OPAmount: TFloatField;
    putevatcol: TMyQuery;
    OPWithEVAT: TStringField;
    EditorPanel: TNxHeaderPanel;
    Label1: TLabel;
    DBEdit1: TDBEdit;
    Label2: TLabel;
    DBEdit2: TDBEdit;
    NxLinkLabel1: TNxLinkLabel;
    NxLinkLabel2: TNxLinkLabel;
    CRDBGrid1: TCRDBGrid;
    Button1: TNxButton;
    Button2: TNxButton;
    Button3: TNxButton;
    Button5: TNxButton;
    NxButton1: TNxButton;
    Panel2: TPanel;
    QuickRep1: TQuickRep;
    ColumnHeaderBand1: TQRBand;
    DetailBand1: TQRBand;
    QRLabel1: TQRLabel;
    QRLabel2: TQRLabel;
    QRLabel3: TQRLabel;
    QRDBText1: TQRDBText;
    QRDBText2: TQRDBText;
    QRLabel4: TQRLabel;
    QRDBText3: TQRDBText;
    procedure Button5Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure NxLinkLabel1Click(Sender: TObject);
    procedure NxLinkLabel2Click(Sender: TObject);
    procedure NxButton1Click(Sender: TObject);
    procedure DBEdit1KeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  OtherPaymentsForm: TOtherPaymentsForm;

implementation

uses SetTeller;

{$R *.dfm}

procedure TOtherPaymentsForm.Button5Click(Sender: TObject);
begin
 Close;
end;

procedure TOtherPaymentsForm.FormClose(Sender: TObject;
  var Action: TCloseAction);
begin
  Action            := caFree;
  OtherPaymentsForm := Nil;
  OP.Close;
end;

procedure TOtherPaymentsForm.Button1Click(Sender: TObject);
begin
 Button1.Enabled   := False;
 Button2.Enabled   := False;
 Button3.Enabled   := False;
 Button5.Enabled   := False;

 EditorPanel.Left := 210;
 EditorPanel.Top  := 112;
 EditorPanel.Visible := True;
 EditorPanel.BringToFront;
 DBEdit1.SetFocus;
 OP.Append;
end;

procedure TOtherPaymentsForm.Button2Click(Sender: TObject);
begin
 Button1.Enabled := False;
 Button2.Enabled := False;
 Button3.Enabled := False;
 Button5.Enabled := False;

 EditorPanel.Left := 210;
 EditorPanel.Top  := 112;
 EditorPanel.Visible := True;
 EditorPanel.BringToFront;
 DBEdit1.SetFocus;
 OP.Edit;
end;

procedure TOtherPaymentsForm.Button3Click(Sender: TObject);
begin
 if (MessageDlg('Delete this record. Please confirm.', mtConfirmation, [mbYes, mbCancel], 0) = mrCancel) then exit;
 OP.Delete;
end;

procedure TOtherPaymentsForm.Button6Click(Sender: TObject);
begin
  Case RadioGroup1.ItemIndex  of
  0 : OP.Locate('Code',Search.Text,[LoPartialKey]);
  1 : OP.Locate('Description',Search.Text,[LoPartialKey]);
  end;
end;

procedure TOtherPaymentsForm.FormCreate(Sender: TObject);
begin
  try
    putevatcol.Execute;
  except
  end;
  Op.Open;
end;


procedure TOtherPaymentsForm.NxLinkLabel1Click(Sender: TObject);
begin
 OP.Post;
 Button1.Enabled   := True;
 Button2.Enabled   := True;
 Button3.Enabled   := True;
 Button5.Enabled   := True;

 EditorPanel.Visible := False;
end;

procedure TOtherPaymentsForm.NxLinkLabel2Click(Sender: TObject);
begin
 OP.Cancel;
 Button1.Enabled   := True;
 Button2.Enabled   := True;
 Button3.Enabled   := True;
 Button5.Enabled   := True;

 EditorPanel.Visible := False;
end;

procedure TOtherPaymentsForm.NxButton1Click(Sender: TObject);
begin
  QuickRep1.Preview;
end;

procedure TOtherPaymentsForm.DBEdit1KeyPress(Sender: TObject;
  var Key: Char);
begin
  If Key = #13 then
    begin
     Perform(CM_DIALOGKEY,VK_TAB,0);
     Key := #0;
    end;
end;

end.
